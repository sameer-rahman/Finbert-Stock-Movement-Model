{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 324,
   "id": "2a2edd1b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from tqdm import tqdm\n",
    "from sentence_transformers import SentenceTransformer\n",
    "from transformers import AutoTokenizer, AutoModel\n",
    "from sklearn.utils import resample\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import precision_recall_curve\n",
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score\n",
    "from torch.utils.data import TensorDataset, DataLoader\n",
    "from sklearn.utils.class_weight import compute_class_weight\n",
    "from collections import Counter\n",
    "import matplotlib.pyplot as plt\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import shap\n",
    "import glob\n",
    "import os \n",
    "\n",
    "os.makedirs(\"data/processed\", exist_ok=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 374,
   "id": "e76e7de3",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"data/processed/merged_news_stock_dataset.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 375,
   "id": "c2ecf5a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"combined_headlines\"] = df[\"combined_headlines\"].fillna(\"\").astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "id": "cbac0414",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(84052, 10)\n",
      "Index(['date', 'Open', 'High', 'Low', 'Close', 'Volume', 'ticker', 'target',\n",
      "       'combined_headlines', 'avg_sentiment'],\n",
      "      dtype='object')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>ticker</th>\n",
       "      <th>target</th>\n",
       "      <th>combined_headlines</th>\n",
       "      <th>avg_sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-08-16</td>\n",
       "      <td>155.066666</td>\n",
       "      <td>158.111772</td>\n",
       "      <td>154.200807</td>\n",
       "      <td>157.673981</td>\n",
       "      <td>2154300</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>Factors to Note Ahead of Keysight's (KEYS) Q3 ...</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-08-17</td>\n",
       "      <td>157.343206</td>\n",
       "      <td>157.450223</td>\n",
       "      <td>154.969387</td>\n",
       "      <td>156.545456</td>\n",
       "      <td>2614200</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>Agilent Technologies (A) Q3 Earnings and Reven...</td>\n",
       "      <td>-0.148780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-08-18</td>\n",
       "      <td>158.773301</td>\n",
       "      <td>160.874716</td>\n",
       "      <td>157.693408</td>\n",
       "      <td>158.598190</td>\n",
       "      <td>2860900</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>Agilent (A) Q3 Earnings &amp; Revenues Beat Estima...</td>\n",
       "      <td>-0.041667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-08-19</td>\n",
       "      <td>157.352924</td>\n",
       "      <td>164.493829</td>\n",
       "      <td>157.226446</td>\n",
       "      <td>163.122070</td>\n",
       "      <td>2179600</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>Researchers Develop COVID-19 Severity Screenin...</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-08-23</td>\n",
       "      <td>164.834324</td>\n",
       "      <td>165.943417</td>\n",
       "      <td>163.569597</td>\n",
       "      <td>165.388870</td>\n",
       "      <td>2061400</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>Agilent Companion Diagnostic Expands CE-IVD Ma...</td>\n",
       "      <td>-0.306200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date        Open        High         Low       Close   Volume ticker  \\\n",
       "0  2021-08-16  155.066666  158.111772  154.200807  157.673981  2154300      A   \n",
       "1  2021-08-17  157.343206  157.450223  154.969387  156.545456  2614200      A   \n",
       "2  2021-08-18  158.773301  160.874716  157.693408  158.598190  2860900      A   \n",
       "3  2021-08-19  157.352924  164.493829  157.226446  163.122070  2179600      A   \n",
       "4  2021-08-23  164.834324  165.943417  163.569597  165.388870  2061400      A   \n",
       "\n",
       "   target                                 combined_headlines  avg_sentiment  \n",
       "0       0  Factors to Note Ahead of Keysight's (KEYS) Q3 ...       0.000000  \n",
       "1       1  Agilent Technologies (A) Q3 Earnings and Reven...      -0.148780  \n",
       "2       1  Agilent (A) Q3 Earnings & Revenues Beat Estima...      -0.041667  \n",
       "3       1  Researchers Develop COVID-19 Severity Screenin...       0.000000  \n",
       "4       1  Agilent Companion Diagnostic Expands CE-IVD Ma...      -0.306200  "
      ]
     },
     "execution_count": 376,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df.shape)\n",
    "print(df.columns)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 520,
   "id": "3b6ffcaf",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['headline_count'] = df['combined_headlines'].str.count(r'\\.') + 1  # assuming 1 sentence = 1 headline\n",
    "df['sentiment_volume'] = df['avg_sentiment'] * df['Volume']\n",
    "df['day_of_week'] = pd.to_datetime(df['date']).dt.dayofweek  # 0 = Monday\n",
    "df['month'] = pd.to_datetime(df['date']).dt.month\n",
    "df['is_q_earnings_month'] = df['month'].isin([1, 4, 7, 10]).astype(int)  # earnings season quarters\n",
    "df['dollar_volume'] = df['Close'] * df['Volume']\n",
    "# Ensure dataframe is sorted correctly\n",
    "df = df.sort_values(['ticker', 'date']).reset_index(drop=True)\n",
    "\n",
    "# Shift close price by 1 day within each ticker\n",
    "df['prev_close'] = df.groupby('ticker')['Close'].shift(1)\n",
    "df['prev_prev_close'] = df.groupby('ticker')['Close'].shift(2)\n",
    "\n",
    "# Previous day's return = (prev_close - prev_prev_close) / prev_prev_close\n",
    "df['prev_day_return'] = (df['prev_close'] - df['prev_prev_close']) / df['prev_prev_close']\n",
    "df['prev_day_return'] = df['prev_day_return'].fillna(0).replace([np.inf, -np.inf], 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "65d10e5e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 5254/5254 [2:34:37<00:00,  1.77s/it]  \n"
     ]
    }
   ],
   "source": [
    "tokenizer = AutoTokenizer.from_pretrained(\"yiyanghkust/finbert-tone\")\n",
    "model = AutoModel.from_pretrained(\"yiyanghkust/finbert-tone\")\n",
    "model.eval()\n",
    "\n",
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "model = model.to(device)\n",
    "\n",
    "sentences = df[\"combined_headlines\"].tolist()\n",
    "batch_size = 16\n",
    "\n",
    "output_dir = \"../data/processed/finbert_chunks\"\n",
    "os.makedirs(output_dir, exist_ok=True)\n",
    "\n",
    "# Detect already-saved chunks to resume\n",
    "existing_chunks = set(int(f.split(\"_\")[1].split(\".\")[0]) for f in os.listdir(output_dir) if f.endswith(\".npy\"))\n",
    "\n",
    "with torch.no_grad():\n",
    "    for i in tqdm(range(0, len(sentences), batch_size)):\n",
    "        chunk_id = i // batch_size\n",
    "        if chunk_id in existing_chunks:\n",
    "            continue  # Skip already-saved chunks\n",
    "\n",
    "        batch = sentences[i:i + batch_size]\n",
    "        encoded = tokenizer(batch, padding=True, truncation=True, return_tensors=\"pt\", max_length=128)\n",
    "        input_ids = encoded[\"input_ids\"].to(device)\n",
    "        attention_mask = encoded[\"attention_mask\"].to(device)\n",
    "\n",
    "        outputs = model(input_ids, attention_mask=attention_mask)\n",
    "        cls_embeddings = outputs.last_hidden_state[:, 0, :]\n",
    "\n",
    "        np.save(os.path.join(output_dir, f\"chunk_{chunk_id}.npy\"), cls_embeddings.cpu().numpy())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "e05ed925",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "✅ Merged all chunks and saved to headline_embeddings.npy\n"
     ]
    }
   ],
   "source": [
    "chunk_paths = sorted(glob.glob(\"../data/processed/finbert_chunks/chunk_*.npy\"),\n",
    "                     key=lambda x: int(x.split(\"_\")[-1].split(\".\")[0]))\n",
    "\n",
    "chunks = [np.load(path) for path in chunk_paths]\n",
    "embeddings = np.vstack(chunks)\n",
    "\n",
    "np.save(\"../data/processed/headline_embeddings.npy\", embeddings)\n",
    "print(\"✅ Merged all chunks and saved to headline_embeddings.npy\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 508,
   "id": "08c7130e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Class 0 (not up): 41519 (49.40%)\n",
      "Class 1 (up):     42533 (50.60%)\n",
      "Imbalance Ratio:  1.02 to 1\n"
     ]
    }
   ],
   "source": [
    "counts = new_df[\"target\"].value_counts()\n",
    "total = counts.sum()\n",
    "neg = counts.get(0, 0)\n",
    "pos = counts.get(1, 0)\n",
    "\n",
    "print(f\"Class 0 (not up): {neg} ({neg / total:.2%})\")\n",
    "print(f\"Class 1 (up):     {pos} ({pos / total:.2%})\")\n",
    "print(f\"Imbalance Ratio:  {max(pos, neg) / min(pos, neg):.2f} to 1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 645,
   "id": "9d18434f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape of X: (84052, 775)\n",
      "Shape of y: (84052,)\n",
      "Shape of ticker_ids: (84052,)\n",
      "Number of unique tickers: 462\n"
     ]
    }
   ],
   "source": [
    "embeddings = np.load(\"../data/processed/headline_embeddings.npy\")\n",
    "\n",
    "df = df.sort_values([\"ticker\", \"date\"]).copy()\n",
    "df[\"prev_close\"] = df.groupby(\"ticker\")[\"Close\"].shift(1)\n",
    "df[\"price_return\"] = (df[\"Close\"] - df[\"prev_close\"]) / df[\"prev_close\"]\n",
    "\n",
    "df[\"target\"] = (df[\"price_return\"] > 0.025).astype(int)\n",
    "feature_cols = [\n",
    "    \"headline_count\", \"sentiment_volume\", \"day_of_week\", \"avg_sentiment\",\n",
    "    \"is_q_earnings_month\", \"dollar_volume\", \"prev_day_return\"\n",
    "]\n",
    "# Fill missing values just in case\n",
    "df[feature_cols] = df[feature_cols].fillna(0).replace([np.inf, -np.inf], 0)\n",
    "\n",
    "top_indices = np.array([5, 6, 1, 3, 0, 2, 4])\n",
    "top_embeddings = embeddings[:, top_indices]\n",
    "\n",
    "# Scale the features\n",
    "scaler = StandardScaler()\n",
    "features_scaled = scaler.fit_transform(df[feature_cols])\n",
    "\n",
    "X = np.hstack([embeddings, features_scaled])\n",
    "y = df[\"target\"].values\n",
    "\n",
    "ticker2id = {ticker: i for i, ticker in enumerate(df[\"ticker\"].unique())}\n",
    "df[\"ticker_id\"] = df[\"ticker\"].map(ticker2id)\n",
    "ticker_ids = df[\"ticker_id\"].values\n",
    "\n",
    "print(f\"Shape of X: {X.shape}\")\n",
    "print(f\"Shape of y: {y.shape}\")\n",
    "print(f\"Shape of ticker_ids: {ticker_ids.shape}\")\n",
    "print(f\"Number of unique tickers: {len(ticker2id)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 646,
   "id": "a46051da",
   "metadata": {},
   "outputs": [],
   "source": [
    "class StockMLPWithTicker(nn.Module):\n",
    "    def __init__(self, input_dim, num_tickers=462, ticker_emb_dim=8):\n",
    "        super().__init__()\n",
    "        self.ticker_embedding = nn.Embedding(num_tickers, ticker_emb_dim)\n",
    "        self.model = nn.Sequential(\n",
    "            nn.Linear(input_dim + ticker_emb_dim, 256),  # ✅ FIXED this line\n",
    "            nn.ReLU(),\n",
    "            nn.Dropout(0.3),\n",
    "            nn.Linear(256, 128),\n",
    "            nn.ReLU(),\n",
    "            nn.Dropout(0.3),\n",
    "            nn.Linear(128, 1)\n",
    "        )\n",
    "\n",
    "    def forward(self, x, ticker_id):\n",
    "        ticker_embed = self.ticker_embedding(ticker_id)\n",
    "        X = torch.cat([x, ticker_embed], dim=1)\n",
    "        return self.model(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 647,
   "id": "6ba71a48",
   "metadata": {},
   "outputs": [],
   "source": [
    "indices = np.arange(len(X))\n",
    "\n",
    "X_train, X_test, y_train, y_test, ticker_train, ticker_test, train_indices, test_indices = train_test_split(\n",
    "    X, y, ticker_ids, indices, test_size=0.2, random_state=42\n",
    ")\n",
    "train_df = pd.DataFrame(X_train)\n",
    "train_df[\"target\"] = y_train\n",
    "train_df[\"ticker\"] = ticker_train\n",
    "\n",
    "# Separate majority and minority classes\n",
    "df_majority = train_df[train_df[\"target\"] == 0]\n",
    "df_minority = train_df[train_df[\"target\"] == 1]\n",
    "\n",
    "# Upsample minority class\n",
    "df_minority_upsampled = resample(\n",
    "    df_minority,\n",
    "    replace=True,                          # sample with replacement\n",
    "    n_samples=len(df_majority),           # match majority class size\n",
    "    random_state=42\n",
    ")\n",
    "\n",
    "# Combine majority and upsampled minority\n",
    "df_upsampled = pd.concat([df_majority, df_minority_upsampled])\n",
    "\n",
    "# Shuffle\n",
    "df_upsampled = df_upsampled.sample(frac=1, random_state=42)\n",
    "\n",
    "# Final arrays\n",
    "X_train_balanced = df_upsampled.drop([\"target\", \"ticker\"], axis=1).values\n",
    "y_train_balanced = df_upsampled[\"target\"].values\n",
    "ticker_train_balanced = df_upsampled[\"ticker\"].values\n",
    "\n",
    "train_dataset = TensorDataset(\n",
    "    torch.tensor(X_train_balanced, dtype=torch.float32),\n",
    "    torch.tensor(ticker_train_balanced, dtype=torch.long),\n",
    "    torch.tensor(y_train_balanced, dtype=torch.float32)\n",
    ")\n",
    "val_dataset = TensorDataset(\n",
    "    torch.tensor(X_test, dtype=torch.float32),\n",
    "    torch.tensor(ticker_test, dtype=torch.long),\n",
    "    torch.tensor(y_test, dtype=torch.float32)\n",
    ")\n",
    "\n",
    "train_loader = DataLoader(train_dataset, batch_size=128, shuffle=True)\n",
    "val_loader = DataLoader(val_dataset, batch_size=128)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 648,
   "id": "5eeb656b",
   "metadata": {},
   "outputs": [],
   "source": [
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "num_tickers = df[\"ticker\"].nunique()\n",
    "ticker2id = {ticker: i for i, ticker in enumerate(df[\"ticker\"].unique())}\n",
    "ticker_ids = df[\"ticker\"].map(ticker2id).values\n",
    "ticker_emb_dim = 8\n",
    "input_dim = X.shape[1]  # DO NOT subtract emb_dim\n",
    "\n",
    "model = StockMLPWithTicker(input_dim=input_dim, num_tickers=num_tickers, ticker_emb_dim=ticker_emb_dim).to(device)\n",
    "\n",
    "criterion = nn.BCEWithLogitsLoss()\n",
    "optimizer = torch.optim.Adam(model.parameters(), lr=1e-3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 649,
   "id": "47c677df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/5 | Train Loss: 0.6794 | Train Acc: 0.5648 | Val Loss: 0.7022 | Val Acc: 0.5935 | AUC: 0.6030 | F1: 0.2641 | P: 0.174 | R: 0.548 | Best Thresh: 0.517\n",
      "Epoch 2/5 | Train Loss: 0.6576 | Train Acc: 0.6018 | Val Loss: 0.6189 | Val Acc: 0.6818 | AUC: 0.6165 | F1: 0.2721 | P: 0.196 | R: 0.447 | Best Thresh: 0.514\n",
      "Epoch 3/5 | Train Loss: 0.6328 | Train Acc: 0.6342 | Val Loss: 0.5999 | Val Acc: 0.5821 | AUC: 0.6254 | F1: 0.2790 | P: 0.181 | R: 0.608 | Best Thresh: 0.462\n",
      "Epoch 4/5 | Train Loss: 0.6046 | Train Acc: 0.6636 | Val Loss: 0.6435 | Val Acc: 0.6144 | AUC: 0.6237 | F1: 0.2797 | P: 0.186 | R: 0.563 | Best Thresh: 0.516\n",
      "Epoch 5/5 | Train Loss: 0.5727 | Train Acc: 0.6919 | Val Loss: 0.6594 | Val Acc: 0.6146 | AUC: 0.6280 | F1: 0.2811 | P: 0.187 | R: 0.566 | Best Thresh: 0.521\n"
     ]
    }
   ],
   "source": [
    "num_epochs = 5\n",
    "\n",
    "for epoch in range(num_epochs):\n",
    "    model.train()\n",
    "    total_loss = 0\n",
    "    all_preds, all_labels = [], []\n",
    "    for x_batch, t_batch, y_batch in train_loader:\n",
    "        x_batch = x_batch.to(device)\n",
    "        t_batch = t_batch.to(device)\n",
    "        y_batch = y_batch.unsqueeze(1).float().to(device)\n",
    "\n",
    "        optimizer.zero_grad()\n",
    "        logits = model(x_batch, t_batch)\n",
    "        loss = criterion(logits, y_batch)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "\n",
    "        total_loss += loss.item() * x_batch.size(0)\n",
    "        preds = torch.sigmoid(logits).detach().cpu().numpy()\n",
    "        all_preds.extend(preds)\n",
    "        all_labels.extend(y_batch.cpu().numpy())\n",
    "    \n",
    "    train_loss = total_loss / len(train_loader.dataset)\n",
    "    train_acc = accuracy_score(np.round(all_labels), np.round(all_preds))\n",
    "\n",
    "    model.eval()\n",
    "    val_loss = 0\n",
    "    val_preds, val_labels = [], []\n",
    "\n",
    "    with torch.no_grad():\n",
    "        for x_batch, t_batch, y_batch in val_loader:\n",
    "            x_batch = x_batch.to(device)\n",
    "            t_batch = t_batch.to(device)\n",
    "            y_batch = y_batch.unsqueeze(1).float().to(device)\n",
    "\n",
    "            logits = model(x_batch, t_batch)\n",
    "            loss = criterion(logits, y_batch)\n",
    "\n",
    "            val_loss += loss.item() * x_batch.size(0)\n",
    "            val_preds.extend(torch.sigmoid(logits).cpu().numpy())\n",
    "            val_labels.extend(y_batch.cpu().numpy())\n",
    "\n",
    "    val_loss /= len(val_loader.dataset)\n",
    "    val_preds = np.array(val_preds)\n",
    "    val_labels = np.array(val_labels)\n",
    "\n",
    "    precision, recall, thresholds = precision_recall_curve(val_labels, val_preds)\n",
    "    f1_scores = 2 * (precision * recall) / (precision + recall + 1e-8)\n",
    "    best_idx = f1_scores.argmax()\n",
    "    best_thresh = thresholds[best_idx]\n",
    "\n",
    "    val_pred_binary = (val_preds >= best_thresh).astype(int)\n",
    "    val_acc = accuracy_score(val_labels.astype(int), val_pred_binary)\n",
    "    val_auc = roc_auc_score(val_labels, val_preds)\n",
    "    val_f1 = f1_score(val_labels.astype(int), val_pred_binary)\n",
    "    val_precision = precision_score(val_labels.astype(int), val_pred_binary)\n",
    "    val_recall = recall_score(val_labels.astype(int), val_pred_binary)\n",
    "\n",
    "    print(f\"Epoch {epoch+1}/{num_epochs} | Train Loss: {train_loss:.4f} | Train Acc: {train_acc:.4f} | \"\n",
    "          f\"Val Loss: {val_loss:.4f} | Val Acc: {val_acc:.4f} | AUC: {val_auc:.4f} | \"\n",
    "          f\"F1: {val_f1:.4f} | P: {val_precision:.3f} | R: {val_recall:.3f} | Best Thresh: {best_thresh:.3f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 630,
   "id": "e8689aae",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = features_scaled\n",
    "\n",
    "indices = np.arange(len(X))\n",
    "\n",
    "X_train, X_test, y_train, y_test, ticker_train, ticker_test, train_indices, test_indices = train_test_split(\n",
    "    X, y, ticker_ids, indices, test_size=0.2, random_state=42\n",
    ")\n",
    "train_df = pd.DataFrame(X_train)\n",
    "train_df[\"target\"] = y_train\n",
    "train_df[\"ticker\"] = ticker_train\n",
    "\n",
    "# Separate majority and minority classes\n",
    "df_majority = train_df[train_df[\"target\"] == 0]\n",
    "df_minority = train_df[train_df[\"target\"] == 1]\n",
    "\n",
    "# Upsample minority class\n",
    "df_minority_upsampled = resample(\n",
    "    df_minority,\n",
    "    replace=True,                          # sample with replacement\n",
    "    n_samples=len(df_majority),           # match majority class size\n",
    "    random_state=42\n",
    ")\n",
    "\n",
    "# Combine majority and upsampled minority\n",
    "df_upsampled = pd.concat([df_majority, df_minority_upsampled])\n",
    "\n",
    "# Shuffle\n",
    "df_upsampled = df_upsampled.sample(frac=1, random_state=42)\n",
    "\n",
    "# Final arrays\n",
    "X_train_balanced = df_upsampled.drop([\"target\", \"ticker\"], axis=1).values\n",
    "y_train_balanced = df_upsampled[\"target\"].values\n",
    "ticker_train_balanced = df_upsampled[\"ticker\"].values\n",
    "\n",
    "train_dataset = TensorDataset(\n",
    "    torch.tensor(X_train_balanced, dtype=torch.float32),\n",
    "    torch.tensor(ticker_train_balanced, dtype=torch.long),\n",
    "    torch.tensor(y_train_balanced, dtype=torch.float32)\n",
    ")\n",
    "val_dataset = TensorDataset(\n",
    "    torch.tensor(X_test, dtype=torch.float32),\n",
    "    torch.tensor(ticker_test, dtype=torch.long),\n",
    "    torch.tensor(y_test, dtype=torch.float32)\n",
    ")\n",
    "\n",
    "train_loader = DataLoader(train_dataset, batch_size=128, shuffle=True)\n",
    "val_loader = DataLoader(val_dataset, batch_size=128)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 554,
   "id": "6d9ad74b",
   "metadata": {},
   "outputs": [],
   "source": [
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "num_tickers = df[\"ticker\"].nunique()\n",
    "ticker2id = {ticker: i for i, ticker in enumerate(df[\"ticker\"].unique())}\n",
    "ticker_ids = df[\"ticker\"].map(ticker2id).values\n",
    "ticker_emb_dim = 8\n",
    "input_dim = X.shape[1]  # DO NOT subtract emb_dim\n",
    "\n",
    "model = StockMLPWithTicker(input_dim=input_dim, num_tickers=num_tickers, ticker_emb_dim=ticker_emb_dim).to(device)\n",
    "\n",
    "criterion = nn.BCEWithLogitsLoss()\n",
    "optimizer = torch.optim.Adam(model.parameters(), lr=1e-3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 559,
   "id": "c1a897b0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/5 | Train Loss: 0.6089 | Train Acc: 0.6568 | Val Loss: 0.6347 | Val Acc: 0.5623 | AUC: 0.6240 | F1: 0.2766 | P: 0.177 | R: 0.629 | Best Thresh: 0.487\n",
      "Epoch 2/5 | Train Loss: 0.6045 | Train Acc: 0.6610 | Val Loss: 0.6595 | Val Acc: 0.4979 | AUC: 0.6205 | F1: 0.2758 | P: 0.171 | R: 0.718 | Best Thresh: 0.464\n",
      "Epoch 3/5 | Train Loss: 0.6025 | Train Acc: 0.6648 | Val Loss: 0.6414 | Val Acc: 0.6198 | AUC: 0.6230 | F1: 0.2753 | P: 0.184 | R: 0.543 | Best Thresh: 0.526\n",
      "Epoch 4/5 | Train Loss: 0.6000 | Train Acc: 0.6658 | Val Loss: 0.6438 | Val Acc: 0.6128 | AUC: 0.6218 | F1: 0.2760 | P: 0.184 | R: 0.555 | Best Thresh: 0.529\n",
      "Epoch 5/5 | Train Loss: 0.5967 | Train Acc: 0.6684 | Val Loss: 0.6427 | Val Acc: 0.5491 | AUC: 0.6198 | F1: 0.2742 | P: 0.174 | R: 0.640 | Best Thresh: 0.491\n"
     ]
    }
   ],
   "source": [
    "num_epochs = 5\n",
    "\n",
    "for epoch in range(num_epochs):\n",
    "    model.train()\n",
    "    total_loss = 0\n",
    "    all_preds, all_labels = [], []\n",
    "    for x_batch, t_batch, y_batch in train_loader:\n",
    "        x_batch = x_batch.to(device)\n",
    "        t_batch = t_batch.to(device)\n",
    "        y_batch = y_batch.unsqueeze(1).float().to(device)\n",
    "\n",
    "        optimizer.zero_grad()\n",
    "        logits = model(x_batch, t_batch)\n",
    "        loss = criterion(logits, y_batch)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "\n",
    "        total_loss += loss.item() * x_batch.size(0)\n",
    "        preds = torch.sigmoid(logits).detach().cpu().numpy()\n",
    "        all_preds.extend(preds)\n",
    "        all_labels.extend(y_batch.cpu().numpy())\n",
    "    \n",
    "    train_loss = total_loss / len(train_loader.dataset)\n",
    "    train_acc = accuracy_score(np.round(all_labels), np.round(all_preds))\n",
    "\n",
    "    model.eval()\n",
    "    val_loss = 0\n",
    "    val_preds, val_labels = [], []\n",
    "\n",
    "    with torch.no_grad():\n",
    "        for x_batch, t_batch, y_batch in val_loader:\n",
    "            x_batch = x_batch.to(device)\n",
    "            t_batch = t_batch.to(device)\n",
    "            y_batch = y_batch.unsqueeze(1).float().to(device)\n",
    "\n",
    "            logits = model(x_batch, t_batch)\n",
    "            loss = criterion(logits, y_batch)\n",
    "\n",
    "            val_loss += loss.item() * x_batch.size(0)\n",
    "            val_preds.extend(torch.sigmoid(logits).cpu().numpy())\n",
    "            val_labels.extend(y_batch.cpu().numpy())\n",
    "\n",
    "    val_loss /= len(val_loader.dataset)\n",
    "    val_preds = np.array(val_preds)\n",
    "    val_labels = np.array(val_labels)\n",
    "\n",
    "    precision, recall, thresholds = precision_recall_curve(val_labels, val_preds)\n",
    "    f1_scores = 2 * (precision * recall) / (precision + recall + 1e-8)\n",
    "    best_idx = f1_scores.argmax()\n",
    "    best_thresh = thresholds[best_idx]\n",
    "\n",
    "    val_pred_binary = (val_preds >= best_thresh).astype(int)\n",
    "    val_acc = accuracy_score(val_labels.astype(int), val_pred_binary)\n",
    "    val_auc = roc_auc_score(val_labels, val_preds)\n",
    "    val_f1 = f1_score(val_labels.astype(int), val_pred_binary)\n",
    "    val_precision = precision_score(val_labels.astype(int), val_pred_binary)\n",
    "    val_recall = recall_score(val_labels.astype(int), val_pred_binary)\n",
    "\n",
    "    print(f\"Epoch {epoch+1}/{num_epochs} | Train Loss: {train_loss:.4f} | Train Acc: {train_acc:.4f} | \"\n",
    "          f\"Val Loss: {val_loss:.4f} | Val Acc: {val_acc:.4f} | AUC: {val_auc:.4f} | \"\n",
    "          f\"F1: {val_f1:.4f} | P: {val_precision:.3f} | R: {val_recall:.3f} | Best Thresh: {best_thresh:.3f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 604,
   "id": "fb2f775c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "🔝 Top 10 Predictions (Sorted by Confidence):\n",
      "| date       | ticker   |   confidence |   predicted_label |   true_label |\n",
      "|:-----------|:---------|-------------:|------------------:|-------------:|\n",
      "| 2020-06-23 | REG      |     0.99975  |                 1 |            1 |\n",
      "| 2022-01-20 | ANET     |     0.999418 |                 1 |            0 |\n",
      "| 2022-12-13 | NWS      |     0.999162 |                 1 |            1 |\n",
      "| 2022-03-25 | NOV      |     0.999114 |                 1 |            1 |\n",
      "| 2022-10-17 | MTD      |     0.999098 |                 1 |            1 |\n",
      "| 2021-10-12 | CHD      |     0.998625 |                 1 |            0 |\n",
      "| 2023-02-23 | NVDA     |     0.998617 |                 1 |            1 |\n",
      "| 2022-01-10 | AAP      |     0.998147 |                 1 |            0 |\n",
      "| 2021-10-18 | ED       |     0.998061 |                 1 |            0 |\n",
      "| 2022-01-10 | TTWO     |     0.997038 |                 1 |            0 |\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "val_tickers = df.iloc[test_indices][\"ticker\"].values\n",
    "val_dates = df.iloc[test_indices][\"date\"].values\n",
    "\n",
    "top_preds = pd.DataFrame({\n",
    "    \"confidence\": val_preds.flatten(),\n",
    "    \"true_label\": val_labels.flatten(),\n",
    "    \"ticker\": val_tickers,\n",
    "    \"date\": val_dates\n",
    "})\n",
    "top_preds[\"predicted_label\"] = (top_preds[\"confidence\"] >= best_thresh).astype(int)\n",
    "top_preds = top_preds.sort_values(\"confidence\", ascending=False)\n",
    "\n",
    "print(\"\\n🔝 Top 10 Predictions (Sorted by Confidence):\")\n",
    "print(top_preds[[\"date\", \"ticker\", \"confidence\", \"predicted_label\", \"true_label\"]].head(10).to_markdown(index=False))\n",
    "\n",
    "# === Optional: Calibration Plot ===\n",
    "prob_true, prob_pred = calibration_curve(top_preds[\"true_label\"], top_preds[\"confidence\"], n_bins=10)\n",
    "\n",
    "plt.figure(figsize=(6, 5))\n",
    "plt.plot(prob_pred, prob_true, marker='o', label='Model')\n",
    "plt.plot([0, 1], [0, 1], linestyle='--', color='gray', label='Perfectly calibrated')\n",
    "plt.xlabel('Predicted confidence')\n",
    "plt.ylabel('True fraction of positives')\n",
    "plt.title('Calibration Curve')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 590,
   "id": "aa8380e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(val_preds, bins=50)\n",
    "plt.title(\"Distribution of Predicted Probabilities\")\n",
    "plt.xlabel(\"Predicted Probability\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 605,
   "id": "55f64c4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "logits_list = []\n",
    "labels_list = []\n",
    "\n",
    "model.eval()\n",
    "with torch.no_grad():\n",
    "    for x_batch, t_batch, y_batch in val_loader:\n",
    "        x_batch = x_batch.to(device)\n",
    "        t_batch = t_batch.to(device)\n",
    "        y_batch = y_batch.unsqueeze(1).float().to(device)\n",
    "\n",
    "        logits = model(x_batch, t_batch)\n",
    "        logits_list.append(logits.cpu())\n",
    "        labels_list.append(y_batch.cpu())\n",
    "\n",
    "logits_tensor = torch.cat(logits_list).squeeze()\n",
    "labels_tensor = torch.cat(labels_list).squeeze()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 631,
   "id": "710c5fc8",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.dummy import DummyClassifier\n",
    "from sklearn.metrics import roc_auc_score, f1_score, precision_score, recall_score, roc_curve, precision_recall_curve\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "# Split the original (imbalanced) data\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    features_scaled, y, test_size=0.2, random_state=42\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 592,
   "id": "ec478e54",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Random Baseline\n",
    "random_clf = DummyClassifier(strategy=\"uniform\", random_state=42)\n",
    "random_clf.fit(X_train, y_train)\n",
    "random_preds = random_clf.predict_proba(X_test)[:, 1]\n",
    "\n",
    "# Logistic Regression Baseline\n",
    "logreg = LogisticRegression(max_iter=1000)\n",
    "logreg.fit(X_train, y_train)\n",
    "logreg_preds = logreg.predict_proba(X_test)[:, 1]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 593,
   "id": "05a83c3d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def evaluate(y_true, y_probs, name=\"Model\"):\n",
    "    precision, recall, thresholds = precision_recall_curve(y_true, y_probs)\n",
    "    f1_scores = 2 * (precision * recall) / (precision + recall + 1e-8)\n",
    "    best_idx = np.argmax(f1_scores)\n",
    "    best_thresh = thresholds[best_idx]\n",
    "    y_pred = (y_probs >= best_thresh).astype(int)\n",
    "\n",
    "    return {\n",
    "        \"Model\": name,\n",
    "        \"AUC\": roc_auc_score(y_true, y_probs),\n",
    "        \"F1\": f1_scores[best_idx],\n",
    "        \"Precision\": precision[best_idx],\n",
    "        \"Recall\": recall[best_idx],\n",
    "        \"Best Threshold\": best_thresh\n",
    "    }\n",
    "\n",
    "results = [\n",
    "    evaluate(y_test, random_preds, \"Random\"),\n",
    "    evaluate(y_test, logreg_preds, \"Logistic Regression\"),\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 594,
   "id": "c6b2f63d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                 Model       AUC        F1  Precision    Recall  \\\n",
      "0               Random  0.500000  0.234880   0.133068  1.000000   \n",
      "1  Logistic Regression  0.553672  0.243358   0.156187  0.550738   \n",
      "\n",
      "   Best Threshold  \n",
      "0        0.500000  \n",
      "1        0.138977  \n"
     ]
    }
   ],
   "source": [
    "df_results = pd.DataFrame(results)\n",
    "print(df_results)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 595,
   "id": "d37640bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fpr_random, tpr_random, _ = roc_curve(y_test, random_preds)\n",
    "fpr_logreg, tpr_logreg, _ = roc_curve(y_test, logreg_preds)\n",
    "\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.plot(fpr_random, tpr_random, label=\"Random\", linestyle='--')\n",
    "plt.plot(fpr_logreg, tpr_logreg, label=\"Logistic Regression\")\n",
    "plt.plot([0, 1], [0, 1], color='gray', linestyle=':')  # perfect randomness line\n",
    "plt.xlabel(\"False Positive Rate\")\n",
    "plt.ylabel(\"True Positive Rate\")\n",
    "plt.title(\"ROC Curve Comparison\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 634,
   "id": "bfc52108",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[LightGBM] [Info] Number of positive: 9405, number of negative: 57836\n",
      "[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000497 seconds.\n",
      "You can set `force_row_wise=true` to remove the overhead.\n",
      "And if memory is not enough, you can set `force_col_wise=true`.\n",
      "[LightGBM] [Info] Total Bins 1078\n",
      "[LightGBM] [Info] Number of data points in the train set: 67241, number of used features: 7\n",
      "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.139870 -> initscore=-1.816370\n",
      "[LightGBM] [Info] Start training from score -1.816370\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x430 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "feature_names = [\n",
    "    \"headline_count\", \"sentiment_volume\", \"day_of_week\", \"avg_sentiment\",\n",
    "    \"is_q_earnings_month\", \"dollar_volume\", \"prev_day_return\"\n",
    "]\n",
    "\n",
    "X_train_df = pd.DataFrame(X_train, columns=feature_names)\n",
    "X_test_df = pd.DataFrame(X_test, columns=feature_names)\n",
    "\n",
    "# Fit LightGBM\n",
    "model = lgb.LGBMClassifier()\n",
    "model.fit(X_train_df, y_train)\n",
    "\n",
    "# SHAP explainer\n",
    "explainer = shap.Explainer(model)\n",
    "shap_values = explainer(X_test_df)\n",
    "\n",
    "# Plot\n",
    "shap.plots.beeswarm(shap_values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 639,
   "id": "87f512f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[LightGBM] [Info] Number of positive: 9314, number of negative: 57927\n",
      "[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000331 seconds.\n",
      "You can set `force_row_wise=true` to remove the overhead.\n",
      "And if memory is not enough, you can set `force_col_wise=true`.\n",
      "[LightGBM] [Info] Total Bins 1079\n",
      "[LightGBM] [Info] Number of data points in the train set: 67241, number of used features: 7\n",
      "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
      "[LightGBM] [Info] Start training from score 0.000000\n",
      "\n",
      "📊 LightGBM Evaluation:\n",
      "AUC: 0.5859\n",
      "F1: 0.2663\n",
      "Precision: 0.168\n",
      "Recall: 0.649\n",
      "Accuracy: 0.5051\n",
      "Best Threshold: 0.467\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import lightgbm as lgb\n",
    "import shap\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import (\n",
    "    accuracy_score, roc_auc_score, f1_score, precision_score,\n",
    "    recall_score, precision_recall_curve\n",
    ")\n",
    "\n",
    "# --- 1. Load feature matrix and labels ---\n",
    "feature_names = [\n",
    "    \"headline_count\", \"sentiment_volume\", \"day_of_week\", \"avg_sentiment\",\n",
    "    \"is_q_earnings_month\", \"dollar_volume\", \"prev_day_return\"\n",
    "]\n",
    "\n",
    "# X and y already defined in your workspace as:\n",
    "# X = features_scaled\n",
    "# y = df[\"target\"].values\n",
    "\n",
    "X_df = pd.DataFrame(X, columns=feature_names)\n",
    "y = y.astype(int)\n",
    "\n",
    "# --- 2. Train/Test Split ---\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X_df, y, test_size=0.2, random_state=42, stratify=y\n",
    ")\n",
    "\n",
    "# --- 3. Train LightGBM with class_weight ---\n",
    "model = lgb.LGBMClassifier(class_weight='balanced', random_state=42)\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# --- 4. Predict Probabilities ---\n",
    "probs = model.predict_proba(X_test)[:, 1]\n",
    "\n",
    "# --- 5. Optimize threshold by F1 ---\n",
    "precision, recall, thresholds = precision_recall_curve(y_test, probs)\n",
    "f1_scores = 2 * (precision * recall) / (precision + recall + 1e-8)\n",
    "best_idx = np.argmax(f1_scores)\n",
    "best_thresh = thresholds[best_idx]\n",
    "\n",
    "# --- 6. Evaluate at optimal threshold ---\n",
    "y_pred = (probs >= best_thresh).astype(int)\n",
    "\n",
    "print(\"\\n📊 LightGBM Evaluation:\")\n",
    "print(f\"AUC: {roc_auc_score(y_test, probs):.4f}\")\n",
    "print(f\"F1: {f1_score(y_test, y_pred):.4f}\")\n",
    "print(f\"Precision: {precision_score(y_test, y_pred):.3f}\")\n",
    "print(f\"Recall: {recall_score(y_test, y_pred):.3f}\")\n",
    "print(f\"Accuracy: {accuracy_score(y_test, y_pred):.4f}\")\n",
    "print(f\"Best Threshold: {best_thresh:.3f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 637,
   "id": "5c256dc3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "🔍 Explaining with SHAP...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 99%|===================| 16574/16811 [00:26<00:00]        "
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x430 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# --- 7. SHAP Analysis ---\n",
    "print(\"\\n🔍 Explaining with SHAP...\")\n",
    "explainer = shap.Explainer(model, X_train)\n",
    "shap_values = explainer(X_test)\n",
    "\n",
    "# Plot\n",
    "shap.plots.beeswarm(shap_values, max_display=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 640,
   "id": "5aa92e23",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[LightGBM] [Info] Number of positive: 9405, number of negative: 57836\n",
      "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.388556 seconds.\n",
      "You can set `force_col_wise=true` to remove the overhead.\n",
      "[LightGBM] [Info] Total Bins 195840\n",
      "[LightGBM] [Info] Number of data points in the train set: 67241, number of used features: 768\n",
      "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.139870 -> initscore=-1.816370\n",
      "[LightGBM] [Info] Start training from score -1.816370\n"
     ]
    }
   ],
   "source": [
    "from lightgbm import LGBMClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# Assume `embeddings` = (N, 768)\n",
    "X_train, X_val, y_train, y_val = train_test_split(embeddings, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Train LightGBM\n",
    "lgbm = LGBMClassifier()\n",
    "lgbm.fit(X_train, y_train)\n",
    "\n",
    "# Get feature importance\n",
    "importances = lgbm.feature_importances_\n",
    "top_k_indices = np.argsort(importances)[::-1][:100]  # Top 100 most important dims\n",
    "\n",
    "# Reduce embedding size\n",
    "embeddings_filtered = embeddings[:, top_k_indices]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 644,
   "id": "d7e48cbe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Get importances from LightGBM model\n",
    "importances = model.feature_importances_\n",
    "dim_labels = [f\"dim_{i}\" for i in range(len(importances))]\n",
    "\n",
    "# Sort top 20 most important dimensions\n",
    "# Get indices of non-zero importance features\n",
    "nonzero_indices = np.where(importances > 0)[0]\n",
    "sorted_indices = nonzero_indices[np.argsort(importances[nonzero_indices])[::-1]]\n",
    "\n",
    "# Take top 20 non-zero importance dimensions\n",
    "top_k = 20\n",
    "top_indices = sorted_indices[:top_k]\n",
    "top_importances = importances[top_indices]\n",
    "top_labels = [dim_labels[i] for i in top_indices]\n",
    "\n",
    "\n",
    "# Plot\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.bar(range(len(top_importances)), top_importances)\n",
    "plt.xticks(range(len(top_labels)), top_labels, rotation=45, ha='right')\n",
    "plt.title(\"Top 20 FinBERT Embedding Dimensions (LightGBM Importance)\")\n",
    "plt.xlabel(\"Embedding Dimension\")\n",
    "plt.ylabel(\"Importance\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7ce1142c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
